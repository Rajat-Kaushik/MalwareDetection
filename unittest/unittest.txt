*** Testing Tools Used by us for the Unit Testing :

1. PYB Builder : PyBuilder is a software build automation tool written in pure Python mainly targeting Python ecosystem. 
It is based on the concept of dependency-based programming but also comes along with powerful plugin mechanism that allows the construction of build life-cycles similar to those known from other famous build tools like Apache Maven and Gradle.

2. Pytest :  The pytest framework makes it easy to write small tests, yet scales to support complex functional testing for applications and libraries.


Some of the Features of the Pytest are :
2.1 Detailed info on failing assert statements (no need to remember self.assert* names)

2.2 Auto-discovery of test modules and functions

2.3 Modular fixtures for managing small or parametrized long-lived test resources

2.4 Can run unittest (including trial) and nose test suites out of the box

2.5 Rich plugin architecture, with over 315+ external plugins and thriving community

***** Execution of the Unit Testing ******

1. Firstly install the PYB builder in the PC.
2. Install the Pytest
  command : pip install pytest == 2.9.1
  
  ** For the Help Section 
  pip install pytest == 2.9.1

3. Start a new project in the PYB Builder using the 
command : pyb --start-project

4. Then we need to add the whole in the Main folder in the Python section in the Python PYB builder newly 
created file.

5. Then we have written the Pytest for all the functions which we have used in that checker_tests.py file.

** One Important thing to remember is that we need to always provide the name of the python test file should always end with the 
_tests.py name else the PYB builder will never recognize the file.

6. Then open a terminal in that folder which you have made and give a command which is :
   command : pyb -v 

7. Then it use to take some time and after that it will start collecting all the test case and will get executed.

8. It is then going execute all the test files and at the end it is going to successfull give a message
   Message : Build successful

9. ** Do give a the correct and most accurate test cases in this file else it is going to fail all the time.  


****** Uses of the Functions which we have used for Testing ********

1. test_index : This is the Function used for testing the Routes and for checking that redirects are working fine.
   It is also checking for the status code of 200 in the output.

2. test_uploader : This is the function used for Testing that the browse and the upload button is working fine or not.
   And here also we are checking for the status code of 200 in the output.

3. test_uploader_post : This is the function used for testing that the post is working fine like whenever we are posting the file 
   to the server than it is getting catched by the flask app and able to get executed easily.
   Here the response is comming from the /uploader.

4. test_index_content : It is used to check that the content is working fine and everythings is getting shown in the main page.

5. test_index_data : It is used for checking that the retreival of the data from the Data.csv file is being done when we are scanning 
   the exe file using the Flask 2.9.1.

6. test_entropy_data : It is the function used for checking that entropy data of each of the 
   algorithm which we have used in the test is perfect or not.
   
7. test_resources_data : This function is used for testing the resource data which we are using in the Algorithm we have implemented.


















































































































































